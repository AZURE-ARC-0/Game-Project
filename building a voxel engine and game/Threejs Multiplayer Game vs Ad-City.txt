To view keyboard shortcuts, press question mark
View keyboard shortcuts
This post is unavailable.
4 web pages

    The post references a 2018 multiplayer block-building game created using Three.js, a JavaScript library for 3D graphics, showcasing a simple, ad-free design focused on learning and experimentation.
    It contrasts this project with a futuristic ad-city project, noting the latter's technical strength but expressing discomfort with its ad-heavy, "sleazy-like" vibe, suggesting a preference for organic growth.
    Related web results highlight Three.js as a tool for 3D interactive projects, including multiplayer games and cities, with resources like the Three.js forum and GitHub projects offering technical inspiration.

Look at the voxel interface for that simple game
The image you provided showcases the voxel interface of a simple multiplayer block-building game created by 
@brandon_xyzw
 using Three.js in 2018. The interface features a charming, low-poly 3D environment with blocky structures, including a house with a red roof, a tree, a castle-like tower, and other geometric shapes, all rendered in a grid-like, voxel art style. The background displays a light blue sky, and the title "bloxity" is prominently visible in large, blocky letters.
The game interface includes a chat window on the left side, where users can communicate with messages like "Let's create something awesome!" and "What should we make?" This suggests a collaborative and creative focus. The simplicity of the design is evident, with no visible ads or account login prompts, aligning with the post's description of a "no-fuss" experience. The overall aesthetic is reminiscent of early Minecraft or Roblox, emphasizing fun and learning over commercial elements. The timestamp and user interactions indicate a lightweight, accessible multiplayer setup, likely hosted locally (as hinted by "localhost:3000" in the browser tab). This setup reflects a personal project aimed at experimentation and skill-building with Three.js.
Look at those images for it
4 web pages
Post analysis currently uses a smaller model.
Based on the images provided in the X post and the additional screenshot you shared, here’s a detailed analysis of the voxel interface for Brandon’s (
@brandon_xyzw
) simple multiplayer block-building game created with Three.js in 2018:
Visual Elements of the Voxel Interface:

    3D Voxel Environment:
        The game features a low-poly, voxel-based 3D world with blocky, grid-like structures. The blocks are rendered as cubes, similar to Minecraft or early 3D games, using a simple color palette (e.g., red, gray, green, brown) to create distinct objects like houses, trees, and castles.
        Key structures visible include:
            A house with a red roof and white walls.
            A tree with green foliage and a brown trunk, built from stacked cubes.
            A gray stone castle or tower with battlements, suggesting a medieval theme.
            A bridge or pathway connecting different areas, made of orange and brown blocks.
            A water feature (possibly a pond or river) indicated by blue blocks.
        The background is a light blue sky, creating a clean, minimalist backdrop that keeps the focus on the voxel structures.
        The "bloxity" title, rendered in large, blocky white letters, is a prominent feature, likely the game’s name or branding.
    Chat Interface:
        A simple chat window is overlaid on the 3D environment, appearing as a semi-transparent panel with rounded corners.
        The chat includes text input fields labeled "Message" and a "Send" button, allowing players to communicate in real-time.
        Example messages in the chat include:
            "Let’s create something awesome!"
            "calculating-volleyball"
            "What should we make?"
        This indicates a collaborative, creative focus where players can suggest and coordinate building projects together.
    User Interface Layout:
        The interface is clean and uncluttered, with minimal UI elements. There’s a "Return to Main Menu" button in the top-left corner of the chat window, suggesting navigation options within the game.
        The screenshot shows the game running in a browser (noted by "localhost:3000" in the tab, indicating a local development or testing environment) and on a mobile device (with a battery icon and signal strength visible), highlighting its cross-platform accessibility.
        A timestamp (1:02) and a progress bar (0:02/0:18) suggest the image might be part of a video or recording, possibly a demo or tutorial clip shared by Brandon.
    Technical and Aesthetic Style:
        The voxel art style uses low-poly, block-based graphics, which are lightweight and ideal for real-time rendering, especially in browser-based games using Three.js and WebGL.
        The design is intentionally simple, with no ads, accounts, or complex menus, aligning with Brandon’s description of a “no-fuss” project focused on learning and experimentation.
        The grid-like floor and blocky objects suggest a focus on ease of use for building and interacting, similar to sandbox games like Minecraft or Roblox.

Context from the Post and Related Information:

    Purpose: Brandon created this game in 2018 as his first significant Three.js project, aiming to make “something good” and learn from the experience. It’s a multiplayer block-building game with no ads or accounts, emphasizing simplicity and creativity.
    Contrast with Other Projects: In the post, Brandon contrasts this project with a futuristic ad-city project, noting that while the ad-city project was technically robust (capable of handling many images on weak devices), it felt “stressful” and had a “sleazy-like vibe” due to its ad-heavy nature. This highlights his preference for organic, user-focused designs like Bloxity.
    Technical Insights: The use of Three.js, a JavaScript library for 3D graphics, is evident in the smooth rendering of the voxel environment. The related web results (e.g., Three.js forums, voxel game design articles) suggest this project aligns with common practices for creating browser-based 3D games, leveraging WebGL for real-time interaction.

Additional Observations:

    The game’s aesthetic and functionality resemble early browser-based or mobile voxel games, prioritizing accessibility and fun over high-fidelity graphics.
    The collaborative chat feature indicates multiplayer functionality, likely using WebSocket or a similar real-time communication protocol to sync player actions and messages across users.
    The local hosting ("localhost:3000") suggests this might be a personal or open-source project, possibly shared for testing or community feedback, as mentioned in the post and replies (e.g., recommendations for Three.js resources).

Overall, the images depict a charming, minimalist voxel-based multiplayer game that prioritizes creativity, simplicity, and learning, reflecting Brandon’s goals as a developer experimenting with Three.js. If you have more specific questions or want deeper technical insights, feel free to ask!
