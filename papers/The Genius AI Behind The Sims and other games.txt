TOC:
Introduction to AI in Gaming

-Overview of AI and procedural generation in modern video games.

-Watch Dogs 2: City Stories System

Dynamic NPC Backgrounds and Personalities
Realistic Interactions within the Game World
Red Dead Redemption 2: AI Director

NPC Schedules and Routines
Player-NPC Interaction Dynamics

-Cyberpunk 2077: Crowd and Community System

NPC Population in a Futuristic City
Player's Ability to Scan NPCs

-The Elder Scrolls V: Skyrim: Radiant AI

NPC Autonomy and Intelligence
Diverse Interaction Possibilities

-The Sims 4: SmartSim System

NPC Traits, Emotions, and Relationships
Life Simulation Dynamics

-Middle-earth: Shadow of Mordor: Nemesis System

Enemy NPCs with Unique Personalities
Memory and Interaction with Player Actions

-Hitman 2: AI Director and Opportunities

NPC Behavior and Awareness
Scripted Events for Assassination Gameplay
Detroit: Become Human: AI Engine and Flowchart

Simulation of NPC Emotions and Motivations
Branching Paths and Outcomes Based on Player Choices

-Dishonored 2: Chaos and Domino Systems

NPC Behavior Affected by Player Actions
Linking NPC Fates

-No Man’s Sky: Atlas System
Procedurally Generated Universe
Alien NPC Interactions

-Mount & Blade II: Bannerlord: Bannerlord Story Mode
NPCs with Clan Affiliations and Personalities
Player Interactions in a Medieval Sandbox World

-RimWorld: AI Storyteller
NPC Challenges in a Sci-Fi Colony
Dynamic Event Generation

-Pharaoh and Cleopatra: AI System
Managing Ancient Egyptian City Life
NPC Behaviors in Response to City Management

-The Sims Series: Utility AI
Detailed Breakdown of NPC Autonomy
Interaction of NPCs with Environment and Player

-Conclusion
Reflection on the Evolution of AI in Gaming
Impact on Gameplay Experience and Immersion

-------------------------------------------------

-Introduction to AI in Gaming
In the ever-evolving landscape of video games, Artificial Intelligence (AI) and procedural generation have emerged as pivotal elements in crafting immersive and dynamic gaming experiences. The incorporation of AI in gaming transcends beyond mere non-player character (NPC) control; it has revolutionized the way game worlds are created, evolved, and interacted with. From the early days of simple pattern-based enemy behaviors to the sophisticated, decision-making algorithms of today, AI in gaming has witnessed a transformative journey.

Procedural generation, a technique where content is generated algorithmically rather than manually, has been pivotal in creating expansive, unique game worlds. This approach not only provides a fresh experience with each playthrough but also allows for the development of larger and more complex environments than could feasibly be crafted by hand.

This exploration will delve into various games that exemplify the use of AI and procedural generation, each contributing uniquely to the field. From creating rich, believable NPCs with intricate backstories in "Watch Dogs 2" to the complex, interwoven narratives influenced by player actions in "Detroit: Become Human," these systems shape the core of modern gaming experiences. By examining these games, we gain insights into the diverse applications of AI and procedural generation and their impact on storytelling, world-building, and player engagement.

-----------------------------------------------------------

"
 **Watch Dogs 2**: A game that features a lot of innovative AI, especially in the way it generates the backgrounds and personalities of the NPCs that populate the game world. The game uses a system called "City Stories" to create these NPCs and make them interact with each other and the player in realistic and dynamic ways. 
 
- **Red Dead Redemption 2**: A game that features a huge open world with hundreds of NPCs that have their own schedules, routines, personalities, and interactions. The game uses a system called "AI Director" to manage the NPCs and their behaviors, and also allows the player to interact with them in various ways, such as greeting, antagonizing, robbing, or helping them.  

- **Cyberpunk 2077**: A game that is set in a futuristic dystopian city with thousands of NPCs that populate the streets, buildings, and vehicles. The game uses a system called "Crowd and Community System" to create and control the NPCs and their movements, and also allows the player to scan them and learn about their backgrounds, affiliations, and secrets.  

- **The Elder Scrolls V: Skyrim**: A game that features a vast fantasy world with hundreds of NPCs that have their own names, roles, factions, and quests. The game uses a system called "Radiant AI" to give the NPCs some degree of autonomy and intelligence, and also allows the player to interact with them in various ways, such as talking, trading, marrying, or killing them.  

- **The Sims 4**: A game that features a simulation of life with dozens of NPCs that have their own traits, aspirations, emotions, and relationships. The game uses a system called "SmartSim" to generate and control the NPCs and their behaviors, and also allows the player to interact with them in various ways, such as chatting, flirting, fighting, or befriending them. (the sims series use what is called utility ai which is complex and developed over the length of the series)

--The LOTR game with the "nemesis system" is Middle-earth: Shadow of Mordor, developed by Monolith Productions and published by Warner Bros. Interactive Entertainment in 2014. The game is set between the events of The Hobbit and The Lord of the Rings, and follows the story of Talion, a ranger who is possessed by the spirit of the elf lord Celebrimbor. The game features an innovative system called the "nemesis system", which allows the game's enemies, the orcs, to have unique personalities, appearances, strengths, and weaknesses. The orcs can also remember their encounters with the player, and react accordingly, such as seeking revenge, fleeing, or forming rivalries. The player can also influence the hierarchy of the orc society by killing, dominating, or branding the orcs. The game received critical acclaim for its combat, open-world design, and the nemesis system, and won several awards, including Game of the Year from GameSpot and Game Developers Choice Awards. The game also spawned a sequel, Middle-earth: Shadow of War, in 2017, which expanded on the nemesis system and introduced new features, such as fortress assaults and army building. ¹²³⁴⁵

--Hitman 2: A game that features a stealth-based gameplay, where the player controls Agent 47, a professional assassin who can disguise himself and use various weapons and gadgets to eliminate his targets. The game features a system called “AI Director”, which controls the behavior and reactions of the NPCs, who have their own routines, roles, and awareness levels. The game also features a system called “Opportunities”, which are scripted events that can help the player to assassinate his targets in creative ways34

--Detroit: Become Human: A game that features a narrative-driven gameplay, where the player controls three androids who can make choices that affect the story and the fate of themselves and others. The game features a system called “AI Engine”, which simulates the emotions, motivations, and relationships of the NPCs, who can react differently to the player’s actions and the environment. The game also features a system called “Flowchart”, which shows the branching paths and outcomes of the player’s choices56

--Dishonored 2: A game that features a stealth-action gameplay, where the player can choose to play as either Corvo Attano or Emily Kaldwin, who have different supernatural abilities and weapons. The game features a system called “Chaos”, which measures the level of violence and disorder caused by the player, and affects the behavior and reactions of the NPCs, who have their own personalities, goals, and affiliations. The game also features a system called “Domino”, which allows the player to link the fates of multiple NPCs, so that what happens to one of them affects the others7

--No Man’s Sky: A game that features a procedurally generated universe with billions of planets, each with their own flora, fauna, and resources. The game uses a system called “Atlas” to create and control the NPCs, who belong to various alien races and factions. The game also allows the player to interact with them in various ways, such as trading, learning languages, fighting, or befriending them1

-Mount & Blade II: Bannerlord

--Mount & Blade II: Bannerlord: A game that features a medieval sandbox world with hundreds of NPCs that have their own clans, kingdoms, and personalities. The game uses a system called “Bannerlord Story Mode” to create and control the NPCs, who can form alliances, rivalries, marriages, and wars. The game also allows the player to interact with them in various ways, such as talking, recruiting, dueling, or betraying them2
RimWorld: A game that features a sci-fi colony simulation with dozens of NPCs that have their own traits, skills, and relationships. The game uses a system called “AI Storyteller” to create and control the NPCs, who can face various events and challenges, such as raids, diseases, or disasters. The game also allows the player to interact with them in various ways, such as managing, training, healing, or torturing them3
-the system in Pharaoh and Cleopatra. According to the first result, Pharaoh and Cleopatra is a city building game set in ancient Egypt, where the player has to manage various aspects of their city, such as population, economy, culture, religion, and military. The game features a system called “AI system” that controls the behavior and reactions of the NPCs, who are the citizens, workers, soldiers, traders, and enemies of the player’s city1

The AI system in Pharaoh and Cleopatra is relatively simple and deterministic, compared to some of the other games we discussed. The NPCs follow fixed paths and routines, and have limited interactions and reactions. For example, the citizens have basic needs, such as food, water, health, and entertainment, and will move to different types of houses depending on how well their needs are met. The workers have specific jobs, such as farmers, miners, craftsmen, or priests, and will produce, transport, or consume various goods and services. The soldiers have different roles, such as infantry, archers, or chariots, and will fight or defend against enemy attacks. The traders have different origins, such as Nubia, Punt, or Rome, and will buy or sell different commodities. The enemies have different motives, such as rebels, invaders, or raiders, and will try to destroy or loot the player’s city1

The AI system in Pharaoh and Cleopatra also has some features that make the game more challenging and realistic. For example, the NPCs can be affected by various events and factors, such as floods, plagues, fires, taxes, or wages, and will change their behavior and reactions accordingly. For instance, the citizens can become unhappy, angry, or violent if their needs are not met, or if they are overtaxed or underpaid. The workers can become idle, inefficient, or corrupt if their workplaces are not well managed or supplied. The soldiers can become weak, cowardly, or disloyal if they are not well trained or equipped. The traders can become scarce, greedy, or hostile if they are not well treated or protected. The enemies can become more frequent, powerful, or cunning if they are not well deterred or defeated1

The AI system in Pharaoh and Cleopatra also has some limitations and flaws that make the game less satisfying and immersive. For example, the NPCs have low levels of autonomy and intelligence, and cannot form relationships, families, or communities. The NPCs also have low levels of variability and diversity, and cannot customize their appearance, personality, or preferences. The NPCs also have low levels of interactivity and feedback, and cannot communicate, cooperate, or negotiate with the player or each other. The NPCs also have low levels of adaptability and emergence, and cannot learn, evolve, or surprise the player or each other1

plus the sims in depth in section:

"The Sims is a digital dollhouse, filled with little computer people. And it's your job to keep them alive, keep them happy, and keep their house furnished with ever more expensive trinkets. But micromanaging the needs and desires of an entire family can get pretty tedious. So the developers at Maxis soon realized that they'd need to give these guys a certain amount of autonomy. Free will. The power to think for themselves if the player stops giving direct commands. Which is actually a pretty complicated task! These characters need to read as believable humans. And they need to be able to adapt to any possible house you build around them or any social situation they find themselves in. And crucially, they can't be so smart that the player can just sit back and do nothing. So how do you make a video game AI that can do all of that? Well, that's what I want to explore in this video. I'm going to break down the clever ways that Maxis designed autonomy in this four-game franchise, though with a focus on the original game and the best one, which is The Sims 3. It's not going to get too technical, but there is a metric buttload of resources in the description if you want to dive deeper. With that out of the way, I'm Mark Brown, this is Game Maker's Toolkit, and here's how The Sims... think.

Decision Making 101
Okay, decision making in The Sims is all driven by a set of mental and physical needs dubbed 'motives' by Maxis. In The Sims 1, that's hunger, hygiene, fun, energy, bladder, social, comfort, and room or tidiness. They all go from negative 100 to positive 100, and if you combine them all, you get the Sim's overall level of happiness. These meters are constantly ticking down, each decaying at slightly different rates and faster if the Sim is performing a related action. The bladder meter drops more quickly when the Sim is eating, for instance. Maxis carefully tuned all of these rates to hopefully match a normal human schedule, like needing eight hours of sleep and three meals a day. So, if the player doesn't give the Sim a command, it will decide what to do by itself, and that decision is driven by a desire to fulfill these motives.

Now you might assume that a Sim knows how to meet its own needs, that a toilet will solve bladder, that fridges and stoves solve hunger, and books, TVs, and pinball tables solve fun. But it doesn't work like that; it's actually the other way around. Instead, all of the objects in the Sim's house contain this data and will broadcast what they can offer. A bed will say 'sleep on me to get 10 energy,' a toilet offers plus 20 to bladder if you use it, or plus 5 to room if you clean it. And other Sims will offer themselves as a way to top up social points. Maxis calls these 'advertisements.'

So whenever the Sim decides what to do, it quickly makes a list of every object in the house and what they can offer. The Sim can then take that advertised number and weigh it based on its current needs. It does this by applying a multiplier to the promised score based on the Sim's current motive levels. For example, if the Sim is well-rested, the bed's energy-boosting score is damped down, but if the Sim is knackered, then that same score is boosted dramatically. Now, the Sim can take the list of interactions and their weighted scores and rank them. At the top of the list is the interaction that will give the most benefit to the Sim right now, and so the digital dude should do just that.

Advanced Decision Making
This clever system was actually inspired by one of designer Will Wright's previous games: SimAnt - a virtual ant colony where the critters would be tempted to move by attractive pheromones. It's basically the same idea but instead of pheromones, it's TVs, fridges, pinball machines, and bathtubs. However, people aren't ants. And so if this was implemented exactly as I just described, it would lead to weird behaviors that make Sims seem either robotic or irrational. So, many careful tweaks are needed to make it work properly.

For instance, not all needs are equal. If a Sim is both starving to death and utterly bored, they should probably eat a sandwich rather than binge Netflix. But if the fridge and TV are both offering the same reward, which should the Sim pick? Well, more rational behavior can be achieved by defining unique curves for each motive. For hunger, we want a curve like this: now, the fridge's score will be reduced to almost zero when the Sim is full but will be extremely high when the Sim is starving, making that more important than any other motive. Similar, smaller curves are used for the other physiological needs like bladder, hygiene, and energy. However, less important needs like fun, social, and comfort actually increase as the Sim becomes happier. This was inspired by Maslow's hierarchy of needs, which says humans will focus on cognitive and social tasks only when their more basic lizard-brain needs are met. Plus, while peeing will satiate your bladder, you can never have too much fun.

We can also weigh the scores based on other factors too. For instance, each Sim has its own personality based on their score in areas like niceness, neatness, and playfulness. So while a pinball machine and a bookcase might advertise the same boost to fun, a Sim will weigh this based on their level of playfulness. Therefore, a more serious Sim will choose to pick up a book. Plus, we can weigh the interaction based on its distance from the Sim, which will make nearby objects more tempting. Finally, some interactions can override everything - like a telephone call or a school bus. And other interactions can be locked entirely, so certain objects won't advertise themselves to kids, or adults, or a visiting guest. All of these factors combined give us a much more useful score, which has been adjusted to the different needs, personality, and proximity of the Sim. And it's from these scores that the Sim's next move is picked. But perhaps most importantly of all, the Sim doesn't actually choose the best option every time. Instead, the Sim picks one of the top-scoring interactions at random. This stops the Sims from feeling robotic and overly predictable, and it also means they're not able to fulfill all their needs perfectly, which, you know, actually gives the player something to do.

Utility AI
What I've just described is a special type of AI called utility AI or needs-based AI. This is a system where a character has a predefined set of needs, then looks around at its current options and picks the one that will fulfill its needs best - the one with the most utility. And in The Sims, it means a little person can be dropped into any house and will then act in a lifelike manner, carefully attending to its hunger and energy when necessary but socializing and having fun when not. Plus, by putting the information on the objects instead of the Sim, it's really easy for Maxis to add hundreds of objects to the game or make endless expansion packs without touching the rest of the code. And so for these reasons, this basic system has been used in all four games in the franchise.

But Maxis wanted to take things even further when making the ambitious third game in the series.

Unique Sims
Okay, so in The Sims 1, we saw how each Sim's personality - like their neatness and playfulness - would impact their decision making. This would make each Sim feel somewhat distinct. But for The Sims 3, this idea was expanded dramatically by swapping the personality meters with traits. Things like neat, neurotic, heavy sleeper, and commitment issues. With five trait slots and 60-odd traits in the base game alone, that's about 5 million possible Sims - effectively making every character unique.

Now these traits have many impacts on the Sim - like how a clumsy Sim will trip themselves up while walking, and a slob will fart and burp while idle. Sims also get bonus moodlets for acting to their traits - and there are certain interactions that are exclusive to Sims with certain traits, like how a computer whiz can make cash through hacking. But these traits also impact the Sim's decision making. This time, however, instead of weighing the scores against the Sim's personality, the Sims 3 actually just adds more motives to the pile. So in the code, every Sim has their usual basic needs like hunger, energy, and bladder, but also five more motives related to their traits. Therefore, a couch potato needs to sit on the sofa and watch TV, just like how they need to pee, eat, and sleep.

And then, in the same way that a fridge advertises itself as a fix for hunger, objects can advertise themselves as a fix for the Sim's trait-related motives. For instance, interactions like scare a Sim, steal candy from a child, smash a dollhouse, and write a trolling comment on the computer are all advertised to Sims with the evil trait. This means that Sims are encouraged to enact their unique personalities autonomously - while also juggling their standard, everyday needs.

Social Situations
Now this idea - of adding additional motives to a Sim - can also be used to simulate social situations. For instance, if a Sim enters a gym, they will temporarily be given the additional motive 'be in gym' - which is satisfied by objects like a workout bench or treadmill. When they leave, the motive is removed. Back at home, a Sim will be motivated to act as a hospitable host for as long as they have guests around - meanwhile, the guests will be motivated to act in a way that's socially acceptable. And in The Sims Medieval, a Sim is given work-related motives while they're on the clock and then loses them during breaks.

However, these motives can also be affected by traits. For example, if a Sim sits down to have a picnic, then the Sim's friends and family are motivated to join them - while strangers are discouraged. But a Sim with the 'inappropriate' trait will override this - and they will, in fact, be motivated to sit with people they don't know. Just to make them feel uncomfortable.

All of this means that Sims will act naturally and believably in whatever location they end up in - but with a few Sims standing out as acting unusually because of their unique personality. And this is all done by simply tweaking the Sim's motivations - rather than hand-scripting a bunch of specific rules and interactions.

Hard-coded Rules
Though, that being said, sometimes you do need more hard-coded rules. Take that house visit I mentioned. A visiting Sim is indeed motivated to act in an appropriate way. But what happens if they stay for too long? Or if the player steps in and makes the Sim act inappropriately? Well, to make this work, the house visit is overseen by a set of rules that dictate social norms. So if a Sim sleeps in the host's bed or tries to wash their hands in the bathroom sink, that will cause a decrease in the relationship between the two Sims. And if the relationship drops far enough, the host will ask the visitor to leave. Plus, there are other hard-coded rules too - like how Sims won't use the bathroom if someone is in there, or how you can't invite a visiting Sim to move in if there are too many people already living in the house.

Autonomous Storytelling
Now, this needs-based AI does make Sims seem pretty lifelike. But it also means that they'll autonomously try to do everything - filling their needs and acting on their traits. And so, in The Sims 3, Maxis added a bit more structure to the storytelling. Now, on top of their motives and traits, Sims have wishes. These are specific goals that the Sim wants to achieve, like getting a promotion, having a baby, or learning a new skill. And these wishes can be fulfilled by the player - who can help the Sim out, or actively thwart them if they're feeling mischievous.

And this is where the push and pull of player and AI decision-making becomes interesting. Sims have their needs, traits, and wishes, and the player has their own desires for the Sim and the house. The Sims 3 tries to juggle all of these competing motivations at once. The Sims will autonomously pursue their needs, but they also have their wishes that the player can choose to fulfill or ignore. This creates a dynamic and interactive storytelling experience where the player's decisions shape the lives of the Sims.

Overall, the AI in The Sims 3 is a complex system that combines utility-based decision making, traits, motives, and wishes to create autonomous and believable Sims. It allows the Sims to act on their own, fulfill their needs, and pursue their goals, while still giving the player a sense of control and the ability to shape the narrative. It's a balance between player agency and AI autonomy that makes The Sims 3 a unique and immersive simulation game.

Background Sims
Now, let's talk about simulating an entire town's worth of little people. In The Sims 3, your house exists in an open-world neighborhood with dozens of other Sims and features homes, restaurants, a park, and so on. Maxis needed to invent new tools to make all of this work, but, in truth, the neighborhood actually operates in a similar way to the Sims themselves. That's because the town also has a bunch of motives and will make choices that will help it fulfill its needs. For instance, it ideally wants to maintain a 50/50 gender balance. So when a new Sim is added to the neighborhood, the probability of it being male or female is weighted by the current needs of the city. It also has a desired employment rate of about 80%, so it can force background Sims to get hired or fired as seen fit. Basically, once a day, at midnight, the town will check its own happiness level and take a few actions to satisfy its needs.

Storytelling
So we've got tools to simulate characters, conversations, house visits, restaurants, and entire towns. And when you have such clever tech, it's tempting to simulate everything. However, supporting storytelling is a delicate balance: the game needs to be specific enough to create stories but not so specific that there's no room for the player's imagination. One way to do this is to carefully employ ambiguity. Basically, to leave some things unsaid, so players can make assumptions and project their own head-canon onto the events on screen. A good example of this is the Sim's iconic babbling dialect, known as Simlish. In early design documents, we can see that Maxis experimented with having the Sims speak real-world languages like English, Navajo, Estonian, and Ukrainian. But due to technical and logistical reasons, they ended up hiring two improv comics to just make up absolute nonsense. This actually works wonders, as the Sims babbling gobbledygook allows players to assume, fill in gaps, project their own imagination onto the Sims, and make the game their own.

Conclusion
So, The Sims has a fascinating AI system that allows for realistic human simulations and creative player-led storytelling. And most of it is driven by a very simple concept. Characters, locations, and entire neighborhoods are given a bunch of needs and then try to make choices that will best fulfill those needs. With a little clever tuning, this leads to characters who feel believable, social situations where Sims act appropriately, and entire neighborhoods that stay consistent and balanced. But this is not just useful for running quirky goal-free life simulations. Utility AI is a fantastic addition to a game maker's toolkit, and its implementation in The Sims should serve as wonderful inspiration to game designers."
--------------------------------

-Over all Conclusion
The exploration of AI and procedural generation in video games reveals a fascinating and diverse landscape of innovation and creativity. Each game discussed demonstrates a unique approach to integrating AI, whether it's through the dynamic interactions of NPCs in "The Elder Scrolls V: Skyrim," the intricate personality traits and decision-making processes in "The Sims 4," or the memorable enemy encounters shaped by the Nemesis System in "Middle-earth: Shadow of Mordor."

What stands out is the way these technologies not only enhance the complexity and depth of game worlds but also significantly elevate the player's experience. They bring about a level of unpredictability, immersion, and personalization that traditional gaming methods cannot offer. Players find themselves in ever-changing environments where their actions have meaningful impacts, creating a sense of agency and involvement in the game's narrative and world.

As the gaming industry continues to advance, the role of AI and procedural generation is set to become even more integral, pushing the boundaries of what is possible in virtual environments. These technologies, with their ability to create dynamic, responsive, and ever-evolving game worlds, signify a bright and exciting future for video game design and player experience.